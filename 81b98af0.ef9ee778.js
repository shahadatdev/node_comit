/*! For license information please see 81b98af0.ef9ee778.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{254:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return m}));var a=n(1),i=n(6),r=(n(422),n(421)),c={id:"04-git",title:"Git & GitHub"},o={id:"04-git",title:"Git & GitHub",description:"## Git",source:"@site/../docs/04-git.md",permalink:"/node_comit/docs/04-git",editUrl:"https://github.com/prma85/node_comit/edit/master/../docs/04-git.md",lastUpdatedBy:"Paulo Andrade",lastUpdatedAt:1580851092,sidebar:"course",previous:{title:"Our First Site",permalink:"/node_comit/docs/03-first-site"},next:{title:"HTML",permalink:"/node_comit/docs/05-html"}},l=[{value:"Git",id:"git",children:[]},{value:"Using Git",id:"using-git",children:[{value:"<code>git status</code>",id:"git-status",children:[]},{value:"<code>git init</code>",id:"git-init",children:[]},{value:"<code>git add</code>",id:"git-add",children:[]},{value:"<code>git commit</code>",id:"git-commit",children:[]},{value:"<code>git log</code>",id:"git-log",children:[]},{value:"<code>git rm</code>",id:"git-rm",children:[]},{value:"Github",id:"github",children:[]},{value:"<code>git remote</code>",id:"git-remote",children:[]},{value:"<code>git clone</code>",id:"git-clone",children:[]}]},{value:"Final notes",id:"final-notes",children:[]},{value:"Git & Github Assets",id:"git--github-assets",children:[]}],b={rightToc:l};function m(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"git"},"Git"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Git is a free and open source ",Object(r.b)("strong",{parentName:"p"},"distributed version control system")," designed to handle everything from small to very large projects with speed and efficiency.")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://git-scm.com"}),"Download and install Git")),Object(r.b)("li",{parentName:"ul"},"After install run the following command on your terminal. This should tell us the version of Git (Current version is ",Object(r.b)("inlineCode",{parentName:"li"},"2.21.0"),").",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git --version\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://help.github.com/articles/setting-your-commit-email-address-in-git/"}),"Configure Git name and email"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git config --global user.name <github userID>\ngit config --global user.email <github email>\n"))),Object(r.b)("li",{parentName:"ul"},"To configure our Git/Github project we'll need to use our ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Command-line_interface"}),"command line interface")),Object(r.b)("li",{parentName:"ul"},"This tutorial uses the Linux/Mac commands (If you use Windows please check the previous guide)"),Object(r.b)("li",{parentName:"ul"},"You\u2019ve downloaded Git, now what? ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/jlord/git-it-electron#what-to-install"}),"Download Git-It")," to your machine and you\u2019ll get a hands-on tutorial that teaches you to use Git right from your local environment, using commands on real repositories. ",Object(r.b)("img",Object(a.a)({parentName:"li"},{src:"../resources/images/git/git-it.png",alt:"Welcome to Git-It"})))),Object(r.b)("h2",{id:"using-git"},"Using Git"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"To configure our Git/Github project we'll need to use our ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Command-line_interface"}),"command line interface")),Object(r.b)("li",{parentName:"ul"},"As the commands might change between operating systems:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf"}),"Windows Command Prompt Cheat sheet")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://learncodethehardway.org/unix/bash_cheat_sheet.pdf"}),"Linux/Mac Bash Cheat sheet")))),Object(r.b)("li",{parentName:"ul"},"This tutorial uses the Linux/Mac commands (If you use Windows please check the previous guide)"),Object(r.b)("li",{parentName:"ul"},"Create a folder with the name ",Object(r.b)("inlineCode",{parentName:"li"},"nodeyqr"),Object(r.b)("inlineCode",{parentName:"li"},"bash mkdir nodeyqr")),Object(r.b)("li",{parentName:"ul"},"Change directory to ",Object(r.b)("inlineCode",{parentName:"li"},"nodeyqr"),Object(r.b)("inlineCode",{parentName:"li"},"bash cd nodeyqr")),Object(r.b)("li",{parentName:"ul"},"Make sure you're on the right folder (",Object(r.b)("inlineCode",{parentName:"li"},"nodeyqr"),")\n",Object(r.b)("inlineCode",{parentName:"li"},"bash pwd")),Object(r.b)("li",{parentName:"ul"},"You must see your path and ",Object(r.b)("strong",{parentName:"li"},"/nodeyqr")),Object(r.b)("li",{parentName:"ul"},"At this point we have everything we need to start versioning our ",Object(r.b)("inlineCode",{parentName:"li"},"nodeyqr")," folder / project")),Object(r.b)("h3",{id:"git-status"},Object(r.b)("inlineCode",{parentName:"h3"},"git status")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"git status")," show the working tree status"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://git-scm.com/docs/git-status"}),"Git status doc")),Object(r.b)("li",{parentName:"ul"},"Run the following command:\n",Object(r.b)("inlineCode",{parentName:"li"},"bash git status")),Object(r.b)("li",{parentName:"ul"},"You should see the following legend: fatal: ",Object(r.b)("inlineCode",{parentName:"li"},"Not a git repository (or any of the parent directories): .git")),Object(r.b)("li",{parentName:"ul"},"We get this error message as we didn't told Git to start watching this project")),Object(r.b)("h3",{id:"git-init"},Object(r.b)("inlineCode",{parentName:"h3"},"git init")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command create an empty Git repository or reinitialize an existing one")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To configure Git in this folder well run ",Object(r.b)("inlineCode",{parentName:"p"},"git init"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://git-scm.com/docs/git-init"}),"Git init doc"),"\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git init"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You should get the following message: ",Object(r.b)("inlineCode",{parentName:"p"},"Initialized empty Git repository in your folder path"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now Git knows that we want to version this project and keep track of all the changes we do")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Let check git status again"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > No commits yet\n        > nothing to commit (create/copy files and use "git add" to track)\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"After running ",Object(r.b)("strong",{parentName:"p"},"git init")," we don't longer see an error")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we find out that we'll be using ",Object(r.b)("strong",{parentName:"p"},"branches"),", ",Object(r.b)("strong",{parentName:"p"},"commits")," & ",Object(r.b)("strong",{parentName:"p"},"add"),"ing files")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Open the folder ",Object(r.b)("inlineCode",{parentName:"p"},"nodeyqr")," using VSC (Visual Studio Code)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Git creates a hidden folder to keep track of our project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"List your folder files to see the ",Object(r.b)("inlineCode",{parentName:"p"},".git")," folder"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"ls -la\n\n        > .\n        > ..\n        > .git\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Create a new file and save it with the name ",Object(r.b)("strong",{parentName:"p"},"index.html"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add the following content:\n",Object(r.b)("inlineCode",{parentName:"p"},'html <!DOCTYPE html> <html lang="en"> <head> <title>Using Git</title> </head> <body> <h1>Using Git</h1> <p>Creating my first versioned file</p> </body> </html>'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Make sure to save the file again")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Go to the terminal and check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > No commits yet\n        > Untracked files:\n            (use "git add <file>..." to include in what will be committed)\n\n            index.html\n\n        > nothing added to commit but untracked files present (use "git add" to track)\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"So we still get the same messages:\n",Object(r.b)("inlineCode",{parentName:"p"},"> On branch master > No commits yet"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"But now we can see that we added a new file to the folder and Git knows about it")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"As we haven't done anything with this file it have an ",Object(r.b)("inlineCode",{parentName:"p"},"Untracked")," state")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Also Git gives us some help: ",Object(r.b)("inlineCode",{parentName:"p"},'use "git add <file>..." to include in what will be committed')))),Object(r.b)("h3",{id:"git-add"},Object(r.b)("inlineCode",{parentName:"h3"},"git add")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command add file/s contents to Git index")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Lets add the index.html to Git index\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git add index.html"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Looks like nothing happened")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check git status again"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > No commits yet\n        > Changes to be committed:\n            (use "git rm --cached <file>..." to unstage)\n\n        >   new file:   index.html\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"By executing ",Object(r.b)("strong",{parentName:"p"},"git add")," we add the documents that we want to ",Object(r.b)("strong",{parentName:"p"},"commit")))),Object(r.b)("h3",{id:"git-commit"},Object(r.b)("inlineCode",{parentName:"h3"},"git commit")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command records changes to the repository")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"When we commit one or many files we create a new version of our project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To know what changed over time it's a good practice to write a descriptive message")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we can commit our changes running ",Object(r.b)("strong",{parentName:"p"},"git commit -m 'Commit message'")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git commit -m 'Added index.html file to project'\n\n        > [master (root-commit) 50400f2] Added index.html file to project\n        > 1 file changed, 10 insertions(+)\n        > create mode 100644 index.html\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We can see that only 1 file has changed and we added 10 new lines of code")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Run git status to check the new status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git status\n\n        > On branch master\n        > nothing to commit, working tree clean\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"As we just committed our changes there's nothing new to commit"))),Object(r.b)("h3",{id:"git-log"},Object(r.b)("inlineCode",{parentName:"h3"},"git log")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command shows commit logs")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We can check our project commit history by running ",Object(r.b)("strong",{parentName:"p"},"git log")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git log\n\n        > commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58 (HEAD -> master)\n        > Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        > Date:   Sun Mar 11 21:39:21 2018 -0500\n\n        >    Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Once we run this command we can see all the commits that this project has")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"By writing good commit messages we can know more about what changed over time")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Open the index.html file again and change the following lines:\n",Object(r.b)("inlineCode",{parentName:"p"},"html <h1>Using Git</h1> <p>Creating my first versioned file</p>"),"\nTo\n",Object(r.b)("inlineCode",{parentName:"p"},"html <h1>Learning and using Git</h1> <p>Creating my commits</p>"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Save your file")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > Changes not staged for commit:\n            (use "git add <file>..." to update what will be committed)\n            (use "git checkout -- <file>..." to discard changes in working directory)\n\n            modified:   index.html\n\n        > no changes added to commit (use "git add" and/or "git commit -a")\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we can see a couple of new things going on:"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Git shows 2 options:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"We can add the changes we did to index.html to commit them: ",Object(r.b)("inlineCode",{parentName:"li"},'(use "git add <file>..." to update what will be committed)')),Object(r.b)("li",{parentName:"ul"},"Also we can checkout the previous index.html version and discard the changes we did: ",Object(r.b)("inlineCode",{parentName:"li"},'(use "git checkout -- <file>..." to discard changes in working directory)')))),Object(r.b)("li",{parentName:"ul"},"Also now index.html is modified (",Object(r.b)("inlineCode",{parentName:"li"},"modified: index.html"),") instead than a new file"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Go ahead and add this changes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Commit the changes and create a new version")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The commit message should be: Updated index.html content")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check git log"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git add index.html\ngit status\ngit commit -m 'Updated index.html content'\ngit log\n\n        > commit 418b85f87a0804a629719a03d67c264c9d64be52 (HEAD -> master)\n        > Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        > Date:   Sun Mar 11 22:03:32 2018 -0500\n\n                Updated index.html content\n\n        > commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58\n        > Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        > Date:   Sun Mar 11 21:39:21 2018 -0500\n\n                Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we have 2 commits in our project log")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Delete index.html\n",Object(r.b)("inlineCode",{parentName:"p"},"bash rm index.html"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > Changes not staged for commit:\n            (use "git add/rm <file>..." to update what will be committed)\n            (use "git checkout -- <file>..." to discard changes in working directory)\n\n            deleted:    index.html\n\n        > no changes added to commit (use "git add" and/or "git commit -a")\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We can see that we deleted the file")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Git shows 2 options"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"We can remove the file from git project by running git rm"),Object(r.b)("li",{parentName:"ul"},"Or discard the changes running git checkout -- index.html"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"As we don't want to delete the file execute git checkout to get the previous version\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git checkout -- index.html"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If we run git status we'll see that the deleted index.html message is no longer there"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git status\n\n        > On branch master\n        > nothing to commit, working tree clean\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Also if we list our folder files we'll see that index.html is still there"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"ls -la\n\n        > .\n        > ..\n        > .git\n        > index.html\n        ```\n")))),Object(r.b)("h3",{id:"git-rm"},Object(r.b)("inlineCode",{parentName:"h3"},"git rm")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To delete one or many files from a project we can run ",Object(r.b)("strong",{parentName:"p"},"git rm"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command remove files from the working tree and from the index")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Delete index.html from the project"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git rm index.html\n\n        > rm 'index.html'\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > Changes to be committed:\n            (use "git reset HEAD <file>..." to unstage)\n\n            deleted:    index.html\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Git rm works like git add but instead of adding the file we'll delete it from the project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we need to commit our change and delete the index.html file"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git commit -m 'Deleted index.html'\n\n        > [master a03ee32] Deleted index.html\n        >  1 file changed, 10 deletions(-)\n        >  delete mode 100644 index.html\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git status\n\n        > On branch master\n        > nothing to commit, working tree clean\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"List all the folder files"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"ls -la\n\n        > .\n        > ..\n        > .git\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Finally check git log"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git log\n\n        commit a03ee32909a04e5001860f6048289cb5d7b59a1a (HEAD -> master)\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:16:30 2018 -0500\n\n                Deleted index.html\n\n        commit 418b85f87a0804a629719a03d67c264c9d64be52\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:03:32 2018 -0500\n\n                Updated index.html content\n\n        commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 21:39:21 2018 -0500\n\n                Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We can see that we added a index.html file")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Then we updated the file contents")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Finally we deleted it")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we have an empty project again but with git history"))),Object(r.b)("h3",{id:"github"},"Github"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Go to ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com"}),"github.com")),Object(r.b)("li",{parentName:"ul"},"Create a new Github account"),Object(r.b)("li",{parentName:"ul"},"Create a new project with the name ",Object(r.b)("inlineCode",{parentName:"li"},"nodeyqr")),Object(r.b)("li",{parentName:"ul"},"Once you create a new project Github will show you all the possible options that we have"),Object(r.b)("li",{parentName:"ul"},"As we already created a project we can run the following commands")),Object(r.b)("h3",{id:"git-remote"},Object(r.b)("inlineCode",{parentName:"h3"},"git remote")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now let's execute this command. Replace ",Object(r.b)("inlineCode",{parentName:"p"},"<user>")," with your github user.\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git remote add origin https://github.com/<user>/nodeyqr.git"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"By executing this command we're configuring a remote git server (github)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We run the ",Object(r.b)("strong",{parentName:"p"},"git remote")," commands to work with a remote server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Then we are adding a new server so we have ",Object(r.b)("strong",{parentName:"p"},"add"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Origin is the default name by convention for our main source")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"So with this command we let git know that we want to add a remote server with the url ",Object(r.b)("inlineCode",{parentName:"p"},"https://github.com/<user>/nodeyqr.git")," that we'll call origin")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We can list the project remote servers"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git remote\n\n        > origin\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"That didn't help :(")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Do it again but now add ",Object(r.b)("strong",{parentName:"p"},"-v")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git remote -v\n\n        origin  https://github.com/<user>/nodeyqr.git (fetch)\n        origin  https://github.com/<user>/nodeyqr.git (push)\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now I can see that I have ",Object(r.b)("strong",{parentName:"p"},"fetch")," & ",Object(r.b)("strong",{parentName:"p"},"push")," permission")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We use ",Object(r.b)("strong",{parentName:"p"},"fetch")," to get changes from the server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We use ",Object(r.b)("strong",{parentName:"p"},"push")," to push our changes to the server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Push your local code changes to the Github server"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git push origin master\n\n        > Counting objects: 12, done.\n        > Delta compression using up to 8 threads.\n        > Compressing objects: 100% (8/8), done.\n        > Writing objects: 100% (12/12), 1.20 KiB | 1.20 MiB/s, done.\n        > Total 12 (delta 1), reused 0 (delta 0)\n        > remote: Resolving deltas: 100% (1/1), done.\n        To github.com:nisnardi/nodeyqr.git\n        * [new branch]      master -> master\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If we refresh our Github page we'll see that our html folder is now part of the Github project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Click on the html folder to see the exercises files")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now go back to the project home page")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Click on commits")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now you can see you commits history in a web page")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To setup our Github project it's nice to add a README.md file as initial project file")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Create a README.md file at the same level than .git folder\n",Object(r.b)("inlineCode",{parentName:"p"},"bash /- |- .git |- README.md"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add the following content to README.md"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-#",metastring:"Node.js Regina","Node.js":!0,Regina:!0}),"\n        This project it's to learn HTML, CSS, JS, Node.js and MongoDB\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > Untracked files:\n            (use "git add <file>..." to include in what will be committed)\n\n            README.md\n\n        > nothing added to commit but untracked files present (use "git add" to track)\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now add the README.md file to git\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git add ."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"By using a dot ",Object(r.b)("inlineCode",{parentName:"p"},".")," we let Git know that we want to add all the files that we changed")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'git status\n\n        > On branch master\n        > Changes to be committed:\n            (use "git reset HEAD <file>..." to unstage)\n\n        >   new file:   README.md\n        ```\n\n'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Looks like README.md has been ",Object(r.b)("inlineCode",{parentName:"p"},"staged")," so we can commit it")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"So we just need to commit"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git commit -m 'Added README.md'\n\n        > [master 98db347] Added README.md\n        > 1 file changed, 5 insertions(+)\n        > create mode 100644 README.md\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git log"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git status\n\n        commit 98db34767b80dca6e55c63d1c60f18641cd9e473 (HEAD -> master)\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:46:58 2018 -0500\n\n                Added README.md\n\n        commit a03ee32909a04e5001860f6048289cb5d7b59a1a\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:16:30 2018 -0500\n\n                Deleted index.html\n\n        commit 418b85f87a0804a629719a03d67c264c9d64be52\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:03:32 2018 -0500\n\n                Updated index.html content\n\n        commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 21:39:21 2018 -0500\n\n                Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Look at the last commit and the the previous one")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The last commit shows (HEAD -> master)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The previous one (origin/master)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"So it looks like our local project is ahead 1 commit from origin (our remote server)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check on Github commits to see if you have the latest commit")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"As we don't have it we need to push it"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git push origin master\n\n        > Counting objects: 3, done.\n        > Delta compression using up to 8 threads.\n        > Compressing objects: 100% (3/3), done.\n        > Writing objects: 100% (3/3), 384 bytes | 384.00 KiB/s, done.\n        > Total 3 (delta 0), reused 0 (delta 0)\n        > To github.com:nisnardi/test.git\n        >   c74bf4d..98db347  master -> master\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now check your commits on Github")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Also take a look at the project home page")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"As you can see we can add a home page for our projects")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To learn more about Github Markdown read ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://guides.github.com/features/mastering-markdown/"}),"Github Mastering Markdown guide")))),Object(r.b)("h3",{id:"git-clone"},Object(r.b)("inlineCode",{parentName:"h3"},"git clone")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"This command clone a repository into a new directory")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Create a test folder outside the ",Object(r.b)("inlineCode",{parentName:"p"},"nodeyqr")," one")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Change directory to the test folder"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd .. (to get out the nodeyqr folder)\nmkdir test\ncd test\npwd\n\n        /test\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We created this folder so we can clone our Github project in a different folder")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we can clone the nodeyqr Github project into this test folder one. Remember of replacing ",Object(r.b)("inlineCode",{parentName:"p"},"<user>")," with your github username.\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git clone https://github.com/<user>/nodeyqr.git"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"List the files"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"ls -la\n\n        > .\n        > ..\n        > nodeyqr\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Git by default uses the project name as project folder name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Change directory to ",Object(r.b)("inlineCode",{parentName:"p"},"nodeyqr"),"\n",Object(r.b)("inlineCode",{parentName:"p"},"bash cd nodeyqr"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check Git status"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"git status\n\n        > On branch master\n        > Your branch is up to date with 'origin/master'.\n\n        > nothing to commit, working tree clean\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Nothing to commit as we just got a fresh copy")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check the project log\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git log"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You'll see the same commits as we did early as it's the same project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"By cloning the project some other team member can work on this project too")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now update the README.md file (open it using VSC)\n",Object(r.b)("inlineCode",{parentName:"p"},"1. [HTML exercises](html)"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Save the file")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add the new change\n",Object(r.b)("inlineCode",{parentName:"p"},"bash git add ."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now commit the changes"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git commit -m 'Added html exercises link to README.md'\n\n        > [master 1678975] Added html exercises link to README.md\n        > 1 file changed, 2 insertions(+), 1 deletion(-)\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"So at this moment we have 2 folders that have the same project")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The test one has one more commit that the initial ",Object(r.b)("inlineCode",{parentName:"p"},"nodeyqr")," one")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Push your code to the Github server"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git push origin master\n\n        > Counting objects: 3, done.\n        > Delta compression using up to 8 threads.\n        > Compressing objects: 100% (3/3), done.\n        > Writing objects: 100% (3/3), 354 bytes | 354.00 KiB/s, done.\n        > Total 3 (delta 1), reused 0 (delta 0)\n        > remote: Resolving deltas: 100% (1/1), completed with 1 local object.\n        > To github.com:nisnardi/test.git\n        >    98db347..1678975  master -> master\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now we have the changes in the test/nodeyqr folder and on the Github server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We still need to update our initial ",Object(r.b)("inlineCode",{parentName:"p"},"nodeyqr"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Lets change directory to the previous folder"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd .. (to leave the nodeyqr folder)\ncd .. (to leave the test folder)\ncd nodeyqr (to enter the nodeyqr folder)\ngit status\n\n        > On branch master\n        > nothing to commit, working tree clean\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Check git log"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"git log\n\n        commit 98db34767b80dca6e55c63d1c60f18641cd9e473\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:46:58 2018 -0500\n\n                Added README.md\n\n        commit a03ee32909a04e5001860f6048289cb5d7b59a1a\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:16:30 2018 -0500\n\n                Deleted index.html\n\n        commit 418b85f87a0804a629719a03d67c264c9d64be52\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:03:32 2018 -0500\n\n                Updated index.html content\n\n        commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 21:39:21 2018 -0500\n\n                Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"We're missing the last commit")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"To sync again with the remote server we can fetch the latest changes"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git fetch origin master\n\n        > remote: Counting objects: 3, done.\n        > remote: Compressing objects: 100% (2/2), done.\n        > remote: Total 3 (delta 1), reused 3 (delta 1), pack-reused 0\n        > Unpacking objects: 100% (3/3), done.\n        > From github.com:nisnardi/test\n        >  * branch            master     -> FETCH_HEAD\n        >    98db347..1678975  master     -> origin/master\n        > Updating 98db347..1678975\n        > Fast-forward\n        >  README.md | 3 ++-\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Git got all the changes from the server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now check the log again"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git log\n\n        commit 16789753fe1be574045cafa60a4ace270a643100 (HEAD -> master, origin/master)\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 23:04:24 2018 -0500\n\n                Added html exercises link to README.md\n\n        commit 98db34767b80dca6e55c63d1c60f18641cd9e473\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:46:58 2018 -0500\n\n                Added README.md\n\n        commit a03ee32909a04e5001860f6048289cb5d7b59a1a\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:16:30 2018 -0500\n\n                Deleted index.html\n\n        commit 418b85f87a0804a629719a03d67c264c9d64be52\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 22:03:32 2018 -0500\n\n                Updated index.html content\n\n        commit 50400f2fd1b7f6ce7030a2e651ac6c2956d53c58\n        Author: Nicolas Isnardi <nicolasisnardi@gmail.com>\n        Date:   Sun Mar 11 21:39:21 2018 -0500\n\n                Added index.html file to project\n        ```\n\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now our local folder is in sync with the server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Create a ",Object(r.b)("strong",{parentName:"p"},"html")," folder at the same level than the html one")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Add this folder to git")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Commit your changes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Push your changes to the origin server")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Now you'll be able to add your html exercises into this ",Object(r.b)("strong",{parentName:"p"},"html")," folder and git will version them")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Happy coding and hope you like using Git and Github!")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Checkout the great ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://octodex.github.com"}),"Octocats")))),Object(r.b)("h2",{id:"final-notes"},"Final notes"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"We'll work on our local project by creating and updating files"),Object(r.b)("li",{parentName:"ul"},"Once we are happy with our code we'll have to add all the files to ",Object(r.b)("inlineCode",{parentName:"li"},"stage")," (git add index.html)"),Object(r.b)("li",{parentName:"ul"},"Then we'll need to commit (git commit -m 'Commit Message')"),Object(r.b)("li",{parentName:"ul"},"If we have a Github project and we want to share/update it we'll have to run ",Object(r.b)("inlineCode",{parentName:"li"},"git push origin master")),Object(r.b)("li",{parentName:"ul"},"If someone else updates our remote server we'll have to run ",Object(r.b)("inlineCode",{parentName:"li"},"git fetch origin master")," to get the latest changes"),Object(r.b)("li",{parentName:"ul"},"We'll do this workflow many times so get used to it and remember to check ",Object(r.b)("inlineCode",{parentName:"li"},"git status")," to know what's going on")),Object(r.b)("h2",{id:"git--github-assets"},"Git & Github Assets"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://git-scm.com/docs"}),"Git Reference")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://git-scm.com/book/en/v2"}),"Git Free book")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf"}),"Github Git cheat sheet")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"http://ndpsoftware.com/git-cheatsheet.html#loc=;"}),"Visual cheat sheet")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com"}),"Github")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://guides.github.com/activities/hello-world"}),"Github Hello World")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.youtube.com/githubguides"}),"Github Guides")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://try.github.io/"}),"Resources to learn Git"))))}m.isMDXComponent=!0},421:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),m=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},p=function(e){var t=m(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=m(n),u=a,d=p["".concat(c,".").concat(u)]||p[u]||s[u]||r;return n?i.a.createElement(d,o({ref:t},b,{components:n})):i.a.createElement(d,o({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var b=2;b<r;b++)c[b]=n[b];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},422:function(e,t,n){"use strict";e.exports=n(423)},423:function(e,t,n){"use strict";var a=n(424),i="function"==typeof Symbol&&Symbol.for,r=i?Symbol.for("react.element"):60103,c=i?Symbol.for("react.portal"):60106,o=i?Symbol.for("react.fragment"):60107,l=i?Symbol.for("react.strict_mode"):60108,b=i?Symbol.for("react.profiler"):60114,m=i?Symbol.for("react.provider"):60109,p=i?Symbol.for("react.context"):60110,s=i?Symbol.for("react.forward_ref"):60112,u=i?Symbol.for("react.suspense"):60113,d=i?Symbol.for("react.suspense_list"):60120,h=i?Symbol.for("react.memo"):60115,j=i?Symbol.for("react.lazy"):60116;i&&Symbol.for("react.fundamental"),i&&Symbol.for("react.responder"),i&&Symbol.for("react.scope");var O="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=e.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,a=1;a<arguments.length;a++)n+="&args[]="+encodeURIComponent(arguments[a]);return e.message="Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}var N={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function w(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||N}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||N}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw g(Error(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=w.prototype;var C=v.prototype=new y;C.constructor=v,a(C,w.prototype),C.isPureReactComponent=!0;var k={current:null},x={suspense:null},A={current:null},G=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var a,i={},c=null,o=null;if(null!=t)for(a in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(c=""+t.key),t)G.call(t,a)&&!E.hasOwnProperty(a)&&(i[a]=t[a]);var l=arguments.length-2;if(1===l)i.children=n;else if(1<l){for(var b=Array(l),m=0;m<l;m++)b[m]=arguments[m+2];i.children=b}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===i[a]&&(i[a]=l[a]);return{$$typeof:r,type:e,key:c,ref:o,props:i,_owner:A.current}}function D(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var M=/\/+/g,T=[];function R(e,t,n,a){if(T.length){var i=T.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=a,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:a,count:0}}function _(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>T.length&&T.push(e)}function I(e,t,n){return null==e?0:function e(t,n,a,i){var o=typeof t;"undefined"!==o&&"boolean"!==o||(t=null);var l=!1;if(null===t)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case r:case c:l=!0}}if(l)return a(i,t,""===n?"."+P(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var b=0;b<t.length;b++){var m=n+P(o=t[b],b);l+=e(o,m,a,i)}else if(null===t||"object"!=typeof t?m=null:m="function"==typeof(m=O&&t[O]||t["@@iterator"])?m:null,"function"==typeof m)for(t=m.call(t),b=0;!(o=t.next()).done;)l+=e(o=o.value,m=n+P(o,b++),a,i);else if("object"===o)throw a=""+t,g(Error(31),"[object Object]"===a?"object with keys {"+Object.keys(t).join(", ")+"}":a,"");return l}(e,"",t,n)}function P(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function q(e,t){e.func.call(e.context,t,e.count++)}function U(e,t,n){var a=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?W(e,a,n,(function(e){return e})):null!=e&&(D(e)&&(e=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),a.push(e))}function W(e,t,n,a,i){var r="";null!=n&&(r=(""+n).replace(M,"$&/")+"/"),I(e,U,t=R(t,r,a,i)),_(t)}function L(){var e=k.current;if(null===e)throw g(Error(321));return e}var $={Children:{map:function(e,t,n){if(null==e)return e;var a=[];return W(e,a,null,t,n),a},forEach:function(e,t,n){if(null==e)return e;I(e,q,t=R(null,null,t,n)),_(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return W(e,t,null,(function(e){return e})),t},only:function(e){if(!D(e))throw g(Error(143));return e}},createRef:function(){return{current:null}},Component:w,PureComponent:v,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:m,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:s,render:e}},lazy:function(e){return{$$typeof:j,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return L().useCallback(e,t)},useContext:function(e,t){return L().useContext(e,t)},useEffect:function(e,t){return L().useEffect(e,t)},useImperativeHandle:function(e,t,n){return L().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return L().useLayoutEffect(e,t)},useMemo:function(e,t){return L().useMemo(e,t)},useReducer:function(e,t,n){return L().useReducer(e,t,n)},useRef:function(e){return L().useRef(e)},useState:function(e){return L().useState(e)},Fragment:o,Profiler:b,StrictMode:l,Suspense:u,unstable_SuspenseList:d,createElement:S,cloneElement:function(e,t,n){if(null==e)throw g(Error(267),e);var i=a({},e.props),c=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=A.current),void 0!==t.key&&(c=""+t.key),e.type&&e.type.defaultProps)var b=e.type.defaultProps;for(m in t)G.call(t,m)&&!E.hasOwnProperty(m)&&(i[m]=void 0===t[m]&&void 0!==b?b[m]:t[m])}var m=arguments.length-2;if(1===m)i.children=n;else if(1<m){b=Array(m);for(var p=0;p<m;p++)b[p]=arguments[p+2];i.children=b}return{$$typeof:r,type:e.type,key:c,ref:o,props:i,_owner:l}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:D,version:"16.10.2",unstable_withSuspenseConfig:function(e,t){var n=x.suspense;x.suspense=void 0===t?null:t;try{e()}finally{x.suspense=n}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:k,ReactCurrentBatchConfig:x,ReactCurrentOwner:A,IsSomeRendererActing:{current:!1},assign:a}},H={default:$},B=H&&$||H;e.exports=B.default||B},424:function(e,t,n){"use strict";var a=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function c(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(i){return!1}}()?Object.assign:function(e,t){for(var n,o,l=c(e),b=1;b<arguments.length;b++){for(var m in n=Object(arguments[b]))i.call(n,m)&&(l[m]=n[m]);if(a){o=a(n);for(var p=0;p<o.length;p++)r.call(n,o[p])&&(l[o[p]]=n[o[p]])}}return l}}}]);